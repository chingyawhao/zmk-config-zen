#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&lt {
  tapping-term-ms = <300>;
};

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};

/ {
  behaviors {
    pht: positional_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <300>;
      bindings = <&kp>, <&kp>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    qwerty {
      label = "QWERTY";
      //                          -----------------------------------------------------------------
      //                          |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |
      //                          |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |
      //                          |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |
      //                                      | TAB | SPC | L1  |   | L4  | BKS | ESC |
      bindings = <
        &kp Q         &kp W        &kp E       &kp R       &kp T     &kp Y     &kp U       &kp I       &kp O        &kp P
        &pht LSHIFT A &pht LCTRL S &pht LALT D &pht LGUI F &kp G     &kp H     &pht LGUI J &pht LALT K &pht LCTRL L &pht LSHIFT SEMI
        &kp Z         &kp X        &kp C       &kp V       &kp B     &kp N     &kp M       &kp COMMA   &kp DOT      &kp FSLH
                                   &kp TAB     &kp SPACE   &lt 1 RET &lt 4 RET &kp BKSP    &kp ESC
      >;
    };

    qwerty_symbol {
      label = "SYMBOL";
      //                          -----------------------------------------------------------------
      //                          |  Q  |  W  |  E  |  ]  |  }  |   |  [  |  "  |  '  |  -  |  =  |
      //                          |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
      //                          |  Z  |     |     |     |     |   |  {  |  `  |  ~  |  _  |  +  |
      //                                      | TAB | SPC | L1  |   | L4  | BKS | ESC |
      bindings = <
        &kp LS(Q)        &kp LS(W)     &kp LS(E)      &kp RBKT       &kp RBRC  &kp LBKT  &kp DQT        &kp SQT        &kp MINUS       &kp EQUAL
        &pht LSHIFT EXCL &pht LCTRL AT &pht LALT HASH &pht LGUI DLLR &kp PRCNT &kp CARET &pht LGUI AMPS &pht LALT STAR &pht LCTRL LPAR &pht LSHIFT RPAR
        &kp LS(Z)        &none         &none          &none          &none     &kp LBRC  &kp GRAVE      &kp TILDE      &kp UNDER       &kp PLUS
                                       &trans         &trans         &trans    &trans    &trans         &trans
      >;
    };

    dvorak {
      label = "DVORAK";
      //                          -----------------------------------------------------------------
      //                          |  '  |  ,  |  .  |  P  |  Y  |   |  F  |  G  |  C  |  R  |  L  |
      //                          |  A  |  O  |  E  |  U  |  I  |   |  D  |  H  |  T  |  N  |  S  |
      //                          |  ;  |  Q  |  J  |  K  |  X  |   |  B  |  M  |  W  |  V  |  Z  |
      //                                      | TAB | SPC | L3  |   | L4  | BKS | ESC |
      bindings = <
        &kp SQT       &kp COMMA    &kp DOT     &kp P       &kp Y     &kp F     &kp G       &kp C       &kp R        &kp L
        &pht LSHIFT A &pht LCTRL O &pht LALT E &pht LGUI U &kp I     &kp D     &pht LGUI H &pht LALT T &pht LCTRL N &pht LSHIFT S
        &kp SEMI      &kp Q        &kp J       &kp K       &kp X     &kp B     &kp M       &kp W       &kp V        &kp Z
                                   &kp TAB     &kp SPACE   &lt 4 RET &lt 3 RET &kp BKSP    &kp ESC
      >;
    };

    dvorak_symbol {
      label = "SYMBOL";
      //                          -----------------------------------------------------------------
      //                          |  "  |  <  |  >  |  =  |  +  |   |  /  |  _  |  -  |  [  |  ]  |
      //                          |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
      //                          |  :  |     |     |     |     |   |  ?  |  `  |  ~  |  {  |  }  |
      //                                      | TAB | SPC | L3  |   | L4  | BKS | ESC |
      bindings = <
        &kp DQT          &kp LT        &kp GT         &kp EQUAL      &kp PLUS  &kp SLASH &kp UNDER      &kp MINUS      &kp LBKT        &kp RBKT
        &pht LSHIFT EXCL &pht LCTRL AT &pht LALT HASH &pht LGUI DLLR &kp PRCNT &kp CARET &pht LGUI AMPS &pht LALT STAR &pht LCTRL LPAR &pht LSHIFT RPAR
        &kp COLON        &none         &none          &none          &none     &kp LBRC  &kp GRAVE      &kp TILDE      &kp UNDER       &kp PLUS
                                       &trans         &trans         &trans    &trans    &trans         &trans
      >;
    };

    number_arrow {
      label = "NUMBER";
      //                          -----------------------------------------------------------------
      //                          |     |     |     |     |     |   |     |     |  ↑  |     |     |
      //                          | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |  ←  |  ↓  |  →  |     |
      //                          |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
      //                                      | TAB | SPC |     |   |     | BKS | ESC |
      bindings = <
        &none        &none        &none        &none        &none        &none   &none     &kp UP    &none      &none
        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none   &kp LEFT  &kp DOWN  &kp RIGHT  &none
        &kp N1       &kp N2       &kp N3       &kp N4       &kp N5       &kp N6  &kp N7    &kp N8    &kp N9     &kp N0
                                  &trans       &trans       &trans       &trans  &trans    &trans
      >;
    };
  };
};
